// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nlayer.Repository;

#nullable disable

namespace Nlayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230108072010_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nlayer.Core.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5527),
                            Name = "Telefonlar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5538),
                            Name = "Bilgisayarlar"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Saatler"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5540),
                            Name = "Televizyonar"
                        });
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5801),
                            Name = "İphone 14 Pro",
                            Price = 30000m,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5804),
                            Name = "İphone 13",
                            Price = 24000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5805),
                            Name = "Xiami Note 11",
                            Price = 14000m,
                            Stock = 1300
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5806),
                            Name = "Macbook Air",
                            Price = 30000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5808),
                            Name = "Samsung OLED TV",
                            Price = 14000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 1, 8, 10, 20, 10, 692, DateTimeKind.Local).AddTicks(5809),
                            Name = "Apple Watch",
                            Price = 7000m,
                            Stock = 5300
                        });
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Rose",
                            Height = 198,
                            ProductId = 1,
                            Width = 13
                        });
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.Product", b =>
                {
                    b.HasOne("Nlayer.Core.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.ProductFeature", b =>
                {
                    b.HasOne("Nlayer.Core.Models.Entities.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Nlayer.Core.Models.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Nlayer.Core.Models.Entities.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
